/*
 * Automatically Generated from Mathematica.
 * Wed 26 Aug 2020 19:08:09 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t1481;
  double t1421;
  double t1494;
  double t1500;
  double t1532;
  double t1541;
  double t1552;
  double t1553;
  double t1557;
  double t1605;
  double t1607;
  double t1636;
  double t1649;
  double t1661;
  double t1662;
  double t1663;
  double t1511;
  double t1523;
  double t1524;
  double t1495;
  double t1503;
  double t1504;
  double t1540;
  double t1546;
  double t1549;
  double t1550;
  double t1564;
  double t1565;
  double t1580;
  double t1583;
  double t1591;
  double t1598;
  double t1599;
  double t1602;
  double t1614;
  double t1615;
  double t1625;
  double t1606;
  double t1610;
  double t1611;
  double t1645;
  double t1655;
  double t1656;
  double t1660;
  double t1668;
  double t1669;
  double t1676;
  double t1677;
  double t1678;
  double t1679;
  double t1680;
  double t1681;
  double t1755;
  double t1756;
  double t1757;
  double t1758;
  double t1759;
  double t1760;
  double t1761;
  double t1762;
  double t1764;
  double t1765;
  double t1766;
  double t1780;
  double t1781;
  double t1782;
  double t1783;
  double t1784;
  double t1787;
  double t1788;
  double t1789;
  double t1791;
  double t1792;
  double t1793;
  double t1698;
  double t1699;
  double t1703;
  double t1685;
  double t1686;
  double t1687;
  double t1820;
  double t1821;
  double t1822;
  double t1714;
  double t1721;
  double t1815;
  double t1816;
  double t1817;
  double t1818;
  double t1738;
  double t1739;
  double t1740;
  double t1729;
  double t1734;
  double t1735;
  double t1808;
  double t1809;
  double t1810;
  double t1742;
  double t1743;
  double t1803;
  double t1804;
  double t1805;
  double t1806;
  double t1527;
  double t1629;
  double t1747;
  double t1748;
  double t1749;
  double t1750;
  double t1751;
  double t1763;
  double t1767;
  double t1768;
  double t1770;
  double t1771;
  double t1772;
  double t1774;
  double t1775;
  double t1776;
  double t1777;
  double t1778;
  double t1790;
  double t1794;
  double t1795;
  double t1797;
  double t1798;
  double t1799;
  double t1826;
  double t1827;
  double t1829;
  double t1830;
  double t1831;
  double t1912;
  double t1913;
  double t1914;
  double t1915;
  double t1916;
  double t1846;
  double t1847;
  double t1848;
  double t1849;
  double t1858;
  double t1859;
  double t1860;
  double t1861;
  double t1862;
  double t1863;
  double t1864;
  double t1865;
  double t1866;
  double t1867;
  double t1868;
  double t1900;
  double t1901;
  double t1903;
  double t1935;
  double t1936;
  double t1937;
  double t1917;
  double t1918;
  double t1919;
  double t1922;
  double t1923;
  double t1926;
  double t1927;
  double t1928;
  double t1929;
  double t1930;
  double t1931;
  double t1934;
  double t1939;
  double t1940;
  double t1944;
  double t1968;
  double t1969;
  double t1946;
  double t1971;
  double t1972;
  double t1948;
  double t1836;
  double t1837;
  double t1839;
  double t1840;
  double t1841;
  double t1983;
  double t1984;
  double t1985;
  double t1986;
  double t1987;
  double t1852;
  double t1853;
  double t1879;
  double t1880;
  double t1881;
  double t1882;
  double t1883;
  double t1884;
  double t1885;
  double t1886;
  double t1887;
  double t1906;
  double t2007;
  double t2008;
  double t2009;
  double t1988;
  double t1989;
  double t1990;
  double t1993;
  double t1994;
  double t1997;
  double t1998;
  double t1999;
  double t2001;
  double t2002;
  double t2003;
  double t2006;
  double t2011;
  double t2012;
  double t2016;
  double t2040;
  double t2041;
  double t2018;
  double t2043;
  double t2044;
  double t2020;
  double t1476;
  double t1483;
  double t1506;
  double t1568;
  double t1603;
  double t1612;
  double t1674;
  double t1682;
  double t1688;
  double t1689;
  double t1710;
  double t1726;
  double t1736;
  double t1737;
  double t1741;
  double t1744;
  double t1745;
  double t1478;
  double t1486;
  double t1529;
  double t1872;
  double t1874;
  double t1635;
  double t1891;
  double t1893;
  double t1869;
  double t1870;
  double t1876;
  double t1877;
  double t1888;
  double t1889;
  double t1895;
  double t1896;
  double t1871;
  double t1873;
  double t1875;
  double t1878;
  double t1890;
  double t1892;
  double t1894;
  double t1897;
  double t1898;
  double t1746;
  double t2117;
  double t2128;
  double t1932;
  double t2137;
  double t1938;
  double t1941;
  double t1942;
  double t1945;
  double t1947;
  double t1949;
  double t2146;
  double t1958;
  double t1959;
  double t1960;
  double t2147;
  double t1954;
  double t1955;
  double t1956;
  double t2148;
  double t2151;
  double t2152;
  double t1966;
  double t2156;
  double t1970;
  double t1973;
  double t1974;
  double t2158;
  double t1976;
  double t1977;
  double t1978;
  double t2123;
  double t2131;
  double t2004;
  double t2140;
  double t2010;
  double t2013;
  double t2014;
  double t2017;
  double t2019;
  double t2021;
  double t2175;
  double t2030;
  double t2031;
  double t2032;
  double t2176;
  double t2026;
  double t2027;
  double t2028;
  double t2177;
  double t2180;
  double t2181;
  double t2038;
  double t2185;
  double t2042;
  double t2045;
  double t2046;
  double t2187;
  double t2048;
  double t2049;
  double t2050;
  double t2064;
  double t2065;
  double t2066;
  double t2067;
  double t2068;
  double t2069;
  double t2070;
  double t2071;
  double t2072;
  double t2055;
  double t2056;
  double t1902;
  double t1904;
  double t1905;
  double t1907;
  double t1908;
  double t1909;
  double t1832;
  double t1833;
  double t1834;
  double t1842;
  double t1843;
  double t1844;
  double t1754;
  double t1769;
  double t1773;
  double t1779;
  double t1796;
  double t1800;
  double t1801;
  double t2098;
  double t2099;
  double t2100;
  double t2101;
  double t2102;
  double t2103;
  double t2104;
  double t2105;
  double t2138;
  double t2139;
  double t2141;
  double t2142;
  double t2143;
  double t2232;
  double t2233;
  double t2234;
  double t2235;
  double t2236;
  double t2237;
  double t2238;
  double t2239;
  double t2240;
  double t2241;
  double t2242;
  double t2243;
  double t2244;
  double t2245;
  double t2246;
  double t2247;
  double t2157;
  double t2159;
  double t2160;
  double t1943;
  double t1950;
  double t1951;
  double t2170;
  double t2171;
  double t2172;
  double t1975;
  double t1979;
  double t1980;
  double t2186;
  double t2188;
  double t2189;
  double t2015;
  double t2022;
  double t2023;
  double t2199;
  double t2200;
  double t2201;
  double t2047;
  double t2051;
  double t2052;
  double t2073;
  double t2074;
  double t2075;
  double t2076;
  double t2077;
  double t2078;
  double t2079;
  double t2080;
  double t2207;
  double t2209;
  double t2211;
  double t2213;
  double t2215;
  double t2217;
  double t2265;
  double t1814;
  double t1819;
  double t1823;
  double t1824;
  double t2111;
  double t2112;
  double t2113;
  double t2114;
  double t2226;
  double t2227;
  double t2228;
  double t2229;
  double t2118;
  double t2119;
  double t2120;
  double t2149;
  double t1920;
  double t2252;
  double t2253;
  double t2254;
  double t2264;
  double t2266;
  double t2267;
  double t2268;
  double t2269;
  double t2270;
  double t2271;
  double t2272;
  double t2273;
  double t2274;
  double t2275;
  double t2276;
  double t2277;
  double t2163;
  double t2164;
  double t2165;
  double t1957;
  double t1961;
  double t1962;
  double t2278;
  double t2279;
  double t2280;
  double t2281;
  double t2282;
  double t2081;
  double t2082;
  double t2083;
  double t2084;
  double t2324;
  double t2325;
  double t2326;
  double t2327;
  double t2346;
  double t2348;
  double t2336;
  double t2337;
  double t2338;
  double t2339;
  double t2340;
  double t2341;
  double t2342;
  double t2343;
  double t2344;
  double t2345;
  double t1825;
  double t2115;
  double t2230;
  double t2231;
  double t2351;
  double t2352;
  double t2378;
  double t2379;
  double t2085;
  double t2205;
  double t2328;
  double t2329;
  double t2372;
  double t2373;
  double t2383;
  double t1802;
  double t1807;
  double t1811;
  double t1812;
  double t2106;
  double t2107;
  double t2108;
  double t2109;
  double t2220;
  double t2221;
  double t2222;
  double t2223;
  double t2124;
  double t2125;
  double t2126;
  double t2178;
  double t1991;
  double t2292;
  double t2293;
  double t2294;
  double t2192;
  double t2193;
  double t2194;
  double t2029;
  double t2033;
  double t2034;
  double t2304;
  double t2305;
  double t2306;
  double t2307;
  double t2308;
  double t2086;
  double t2087;
  double t2088;
  double t2089;
  double t2330;
  double t2331;
  double t2332;
  double t2333;
  double t2404;
  double t2406;
  double t1813;
  double t2110;
  double t2224;
  double t2225;
  double t2409;
  double t2410;
  double t2436;
  double t2437;
  double t2090;
  double t2206;
  double t2334;
  double t2335;
  double t2430;
  double t2431;
  t1481 = Sin(var2[2]);
  t1421 = Cos(var2[2]);
  t1494 = Cos(var2[3]);
  t1500 = Sin(var2[3]);
  t1532 = Cos(var2[4]);
  t1541 = Sin(var2[4]);
  t1552 = t1494*t1532;
  t1553 = -1.*t1500*t1541;
  t1557 = t1552 + t1553;
  t1605 = Cos(var2[5]);
  t1607 = Sin(var2[5]);
  t1636 = Cos(var2[6]);
  t1649 = Sin(var2[6]);
  t1661 = t1605*t1636;
  t1662 = -1.*t1607*t1649;
  t1663 = t1661 + t1662;
  t1511 = t1421*t1494;
  t1523 = -1.*t1481*t1500;
  t1524 = t1511 + t1523;
  t1495 = t1494*t1481;
  t1503 = t1421*t1500;
  t1504 = t1495 + t1503;
  t1540 = -1.*t1532*t1500;
  t1546 = -1.*t1494*t1541;
  t1549 = t1540 + t1546;
  t1550 = t1481*t1549;
  t1564 = t1421*t1557;
  t1565 = t1550 + t1564;
  t1580 = t1532*t1500;
  t1583 = t1494*t1541;
  t1591 = t1580 + t1583;
  t1598 = t1421*t1591;
  t1599 = t1481*t1557;
  t1602 = t1598 + t1599;
  t1614 = t1421*t1605;
  t1615 = -1.*t1481*t1607;
  t1625 = t1614 + t1615;
  t1606 = t1605*t1481;
  t1610 = t1421*t1607;
  t1611 = t1606 + t1610;
  t1645 = -1.*t1636*t1607;
  t1655 = -1.*t1605*t1649;
  t1656 = t1645 + t1655;
  t1660 = t1481*t1656;
  t1668 = t1421*t1663;
  t1669 = t1660 + t1668;
  t1676 = t1636*t1607;
  t1677 = t1605*t1649;
  t1678 = t1676 + t1677;
  t1679 = t1421*t1678;
  t1680 = t1481*t1663;
  t1681 = t1679 + t1680;
  t1755 = -1.*t1532;
  t1756 = 1. + t1755;
  t1757 = 0.4*t1756;
  t1758 = 0.64*t1532;
  t1759 = t1757 + t1758;
  t1760 = t1759*t1500;
  t1761 = 0.24*t1494*t1541;
  t1762 = t1760 + t1761;
  t1764 = t1494*t1759;
  t1765 = -0.24*t1500*t1541;
  t1766 = t1764 + t1765;
  t1780 = -1.*t1636;
  t1781 = 1. + t1780;
  t1782 = 0.4*t1781;
  t1783 = 0.64*t1636;
  t1784 = t1782 + t1783;
  t1787 = t1784*t1607;
  t1788 = 0.24*t1605*t1649;
  t1789 = t1787 + t1788;
  t1791 = t1605*t1784;
  t1792 = -0.24*t1607*t1649;
  t1793 = t1791 + t1792;
  t1698 = t1421*t1549;
  t1699 = -1.*t1481*t1557;
  t1703 = t1698 + t1699;
  t1685 = -1.*t1494*t1481;
  t1686 = -1.*t1421*t1500;
  t1687 = t1685 + t1686;
  t1820 = t1759*t1541;
  t1821 = -0.24*t1532*t1541;
  t1822 = t1820 + t1821;
  t1714 = -1.*t1481*t1591;
  t1721 = t1714 + t1564;
  t1815 = t1759*t1532;
  t1816 = Power(t1541,2);
  t1817 = 0.24*t1816;
  t1818 = t1815 + t1817;
  t1738 = t1421*t1656;
  t1739 = -1.*t1481*t1663;
  t1740 = t1738 + t1739;
  t1729 = -1.*t1605*t1481;
  t1734 = -1.*t1421*t1607;
  t1735 = t1729 + t1734;
  t1808 = t1784*t1649;
  t1809 = -0.24*t1636*t1649;
  t1810 = t1808 + t1809;
  t1742 = -1.*t1481*t1678;
  t1743 = t1742 + t1668;
  t1803 = t1784*t1636;
  t1804 = Power(t1649,2);
  t1805 = 0.24*t1804;
  t1806 = t1803 + t1805;
  t1527 = Power(t1524,2);
  t1629 = Power(t1625,2);
  t1747 = Power(t1494,2);
  t1748 = 0.11*t1747;
  t1749 = Power(t1500,2);
  t1750 = 0.11*t1749;
  t1751 = t1748 + t1750;
  t1763 = -1.*t1762*t1557;
  t1767 = -1.*t1549*t1766;
  t1768 = t1763 + t1767;
  t1770 = t1762*t1591;
  t1771 = t1557*t1766;
  t1772 = t1770 + t1771;
  t1774 = Power(t1605,2);
  t1775 = 0.11*t1774;
  t1776 = Power(t1607,2);
  t1777 = 0.11*t1776;
  t1778 = t1775 + t1777;
  t1790 = -1.*t1789*t1663;
  t1794 = -1.*t1656*t1793;
  t1795 = t1790 + t1794;
  t1797 = t1789*t1678;
  t1798 = t1663*t1793;
  t1799 = t1797 + t1798;
  t1826 = -1.*var1[6];
  t1827 = var3[4] + t1826;
  t1829 = -1.*var1[5];
  t1830 = var3[3] + t1829;
  t1831 = 0.748*t1687;
  t1912 = -1.*t1494*t1532;
  t1913 = t1500*t1541;
  t1914 = t1912 + t1913;
  t1915 = t1481*t1914;
  t1916 = t1698 + t1915;
  t1846 = -1.*var1[0];
  t1847 = var3[0] + t1846;
  t1848 = 13.6*t1687*t1524;
  t1849 = 13.6*t1504*t1524;
  t1858 = -1.*var1[1];
  t1859 = var3[1] + t1858;
  t1860 = Power(t1687,2);
  t1861 = 6.8*t1860;
  t1862 = 6.8*t1687*t1504;
  t1863 = 6.8*t1527;
  t1864 = -1.*t1421*t1494;
  t1865 = t1481*t1500;
  t1866 = t1864 + t1865;
  t1867 = 6.8*t1524*t1866;
  t1868 = -1.*t1481*t1549;
  t1900 = -1.*var1[2];
  t1901 = var3[2] + t1900;
  t1903 = 6.8*t1687*t1751;
  t1935 = -1.*t1759*t1500;
  t1936 = -0.24*t1494*t1541;
  t1937 = t1935 + t1936;
  t1917 = 0.768*t1827*t1916;
  t1918 = 3.2*t1822*t1565;
  t1919 = 3.2*t1818*t1916;
  t1922 = 6.4*t1565*t1602;
  t1923 = 6.4*t1565*t1916;
  t1926 = 3.2*t1565*t1721;
  t1927 = 3.2*t1703*t1602;
  t1928 = t1421*t1914;
  t1929 = t1868 + t1928;
  t1930 = 3.2*t1565*t1929;
  t1931 = 3.2*t1703*t1916;
  t1934 = 3.2*t1565*t1768;
  t1939 = t1762*t1557;
  t1940 = t1549*t1766;
  t1944 = 3.2*t1772*t1916;
  t1968 = -0.24*t1532*t1500;
  t1969 = t1968 + t1936;
  t1946 = -1.*t1549*t1762;
  t1971 = 0.24*t1494*t1532;
  t1972 = t1971 + t1765;
  t1948 = -1.*t1766*t1914;
  t1836 = -1.*var1[4];
  t1837 = var3[6] + t1836;
  t1839 = -1.*var1[3];
  t1840 = var3[5] + t1839;
  t1841 = 0.748*t1735;
  t1983 = -1.*t1605*t1636;
  t1984 = t1607*t1649;
  t1985 = t1983 + t1984;
  t1986 = t1481*t1985;
  t1987 = t1738 + t1986;
  t1852 = 13.6*t1735*t1625;
  t1853 = 13.6*t1611*t1625;
  t1879 = Power(t1735,2);
  t1880 = 6.8*t1879;
  t1881 = 6.8*t1735*t1611;
  t1882 = 6.8*t1629;
  t1883 = -1.*t1421*t1605;
  t1884 = t1481*t1607;
  t1885 = t1883 + t1884;
  t1886 = 6.8*t1625*t1885;
  t1887 = -1.*t1481*t1656;
  t1906 = 6.8*t1735*t1778;
  t2007 = -1.*t1784*t1607;
  t2008 = -0.24*t1605*t1649;
  t2009 = t2007 + t2008;
  t1988 = 0.768*t1837*t1987;
  t1989 = 3.2*t1810*t1669;
  t1990 = 3.2*t1806*t1987;
  t1993 = 6.4*t1669*t1681;
  t1994 = 6.4*t1669*t1987;
  t1997 = 3.2*t1669*t1743;
  t1998 = 3.2*t1740*t1681;
  t1999 = t1421*t1985;
  t2001 = t1887 + t1999;
  t2002 = 3.2*t1669*t2001;
  t2003 = 3.2*t1740*t1987;
  t2006 = 3.2*t1669*t1795;
  t2011 = t1789*t1663;
  t2012 = t1656*t1793;
  t2016 = 3.2*t1799*t1987;
  t2040 = -0.24*t1636*t1607;
  t2041 = t2040 + t2008;
  t2018 = -1.*t1656*t1789;
  t2043 = 0.24*t1605*t1636;
  t2044 = t2043 + t1792;
  t2020 = -1.*t1793*t1985;
  t1476 = Power(t1421,2);
  t1483 = Power(t1481,2);
  t1506 = Power(t1504,2);
  t1568 = Power(t1565,2);
  t1603 = Power(t1602,2);
  t1612 = Power(t1611,2);
  t1674 = Power(t1669,2);
  t1682 = Power(t1681,2);
  t1688 = -6.8*t1687*t1524;
  t1689 = -6.8*t1504*t1524;
  t1710 = -3.2*t1565*t1703;
  t1726 = -3.2*t1721*t1602;
  t1736 = -6.8*t1735*t1625;
  t1737 = -6.8*t1611*t1625;
  t1741 = -3.2*t1669*t1740;
  t1744 = -3.2*t1743*t1681;
  t1745 = t1688 + t1689 + t1710 + t1726 + t1736 + t1737 + t1741 + t1744;
  t1478 = -12.*t1476;
  t1486 = -12.*t1483;
  t1529 = -6.8*t1527;
  t1872 = Power(t1721,2);
  t1874 = Power(t1703,2);
  t1635 = -6.8*t1629;
  t1891 = Power(t1743,2);
  t1893 = Power(t1740,2);
  t1869 = -1.*t1421*t1557;
  t1870 = t1868 + t1869;
  t1876 = -1.*t1421*t1591;
  t1877 = t1876 + t1699;
  t1888 = -1.*t1421*t1663;
  t1889 = t1887 + t1888;
  t1895 = -1.*t1421*t1678;
  t1896 = t1895 + t1739;
  t1871 = 3.2*t1870*t1565;
  t1873 = 3.2*t1872;
  t1875 = 3.2*t1874;
  t1878 = 3.2*t1877*t1602;
  t1890 = 3.2*t1889*t1669;
  t1892 = 3.2*t1891;
  t1894 = 3.2*t1893;
  t1897 = 3.2*t1896*t1681;
  t1898 = t1861 + t1862 + t1863 + t1867 + t1871 + t1873 + t1875 + t1878 + t1880 + t1881 + t1882 + t1886 + t1890 + t1892 + t1894 + t1897;
  t1746 = -2.88*t1421;
  t2117 = 0.748*t1866;
  t2128 = 13.6*t1687*t1866;
  t1932 = t1861 + t1862 + t1863 + t1867 + t1926 + t1927 + t1930 + t1931;
  t2137 = 6.8*t1866*t1751;
  t1938 = t1937*t1557;
  t1941 = t1591*t1766;
  t1942 = t1938 + t1939 + t1940 + t1941;
  t1945 = -1.*t1549*t1937;
  t1947 = -1.*t1557*t1766;
  t1949 = t1945 + t1946 + t1947 + t1948;
  t2146 = 0.768*t1827*t1929;
  t1958 = Power(t1532,2);
  t1959 = -0.24*t1958;
  t1960 = t1815 + t1959;
  t2147 = 3.2*t1822*t1703;
  t1954 = -1.*t1759*t1541;
  t1955 = 0.24*t1532*t1541;
  t1956 = t1954 + t1955;
  t2148 = 3.2*t1818*t1929;
  t2151 = 6.4*t1721*t1703;
  t2152 = 6.4*t1703*t1929;
  t1966 = t1926 + t1927 + t1930 + t1931;
  t2156 = 3.2*t1703*t1768;
  t1970 = t1969*t1557;
  t1973 = t1591*t1972;
  t1974 = t1970 + t1939 + t1940 + t1973;
  t2158 = 3.2*t1772*t1929;
  t1976 = -1.*t1549*t1969;
  t1977 = -1.*t1557*t1972;
  t1978 = t1976 + t1946 + t1977 + t1948;
  t2123 = 0.748*t1885;
  t2131 = 13.6*t1735*t1885;
  t2004 = t1880 + t1881 + t1882 + t1886 + t1997 + t1998 + t2002 + t2003;
  t2140 = 6.8*t1885*t1778;
  t2010 = t2009*t1663;
  t2013 = t1678*t1793;
  t2014 = t2010 + t2011 + t2012 + t2013;
  t2017 = -1.*t1656*t2009;
  t2019 = -1.*t1663*t1793;
  t2021 = t2017 + t2018 + t2019 + t2020;
  t2175 = 0.768*t1837*t2001;
  t2030 = Power(t1636,2);
  t2031 = -0.24*t2030;
  t2032 = t1803 + t2031;
  t2176 = 3.2*t1810*t1740;
  t2026 = -1.*t1784*t1649;
  t2027 = 0.24*t1636*t1649;
  t2028 = t2026 + t2027;
  t2177 = 3.2*t1806*t2001;
  t2180 = 6.4*t1743*t1740;
  t2181 = 6.4*t1740*t2001;
  t2038 = t1997 + t1998 + t2002 + t2003;
  t2185 = 3.2*t1740*t1795;
  t2042 = t2041*t1663;
  t2045 = t1678*t2044;
  t2046 = t2042 + t2011 + t2012 + t2045;
  t2187 = 3.2*t1799*t2001;
  t2048 = -1.*t1656*t2041;
  t2049 = -1.*t1663*t2044;
  t2050 = t2048 + t2018 + t2049 + t2020;
  t2064 = 6.8*t1687*t1524;
  t2065 = 6.8*t1504*t1524;
  t2066 = 3.2*t1565*t1703;
  t2067 = 3.2*t1721*t1602;
  t2068 = 6.8*t1735*t1625;
  t2069 = 6.8*t1611*t1625;
  t2070 = 3.2*t1669*t1740;
  t2071 = 3.2*t1743*t1681;
  t2072 = t2064 + t2065 + t2066 + t2067 + t2068 + t2069 + t2070 + t2071;
  t2055 = 12.*t1476;
  t2056 = 12.*t1483;
  t1902 = -2.88*t1481;
  t1904 = 3.2*t1721*t1768;
  t1905 = 3.2*t1703*t1772;
  t1907 = 3.2*t1743*t1795;
  t1908 = 3.2*t1740*t1799;
  t1909 = t1902 + t1903 + t1904 + t1905 + t1906 + t1907 + t1908;
  t1832 = 3.2*t1822*t1721;
  t1833 = 3.2*t1818*t1703;
  t1834 = t1831 + t1832 + t1833;
  t1842 = 3.2*t1810*t1743;
  t1843 = 3.2*t1806*t1740;
  t1844 = t1841 + t1842 + t1843;
  t1754 = -6.8*t1524*t1751;
  t1769 = -3.2*t1602*t1768;
  t1773 = -3.2*t1565*t1772;
  t1779 = -6.8*t1625*t1778;
  t1796 = -3.2*t1681*t1795;
  t1800 = -3.2*t1669*t1799;
  t1801 = t1746 + t1754 + t1769 + t1773 + t1779 + t1796 + t1800;
  t2098 = 2.88*t1481;
  t2099 = -6.8*t1687*t1751;
  t2100 = -3.2*t1721*t1768;
  t2101 = -3.2*t1703*t1772;
  t2102 = -6.8*t1735*t1778;
  t2103 = -3.2*t1743*t1795;
  t2104 = -3.2*t1740*t1799;
  t2105 = t2098 + t2099 + t2100 + t2101 + t2102 + t2103 + t2104;
  t2138 = 3.2*t1877*t1768;
  t2139 = 3.2*t1870*t1772;
  t2141 = 3.2*t1896*t1795;
  t2142 = 3.2*t1889*t1799;
  t2143 = t1746 + t2137 + t2138 + t2139 + t2140 + t2141 + t2142;
  t2232 = 0.4*t1756*t1866;
  t2233 = -0.4*t1504*t1541;
  t2234 = t1532*t1866;
  t2235 = t1504*t1541;
  t2236 = t2234 + t2235;
  t2237 = 0.8*t2236;
  t2238 = t2232 + t2233 + t2237;
  t2239 = -1.*var4[2]*t2238;
  t2240 = 0.4*t1756*t1687;
  t2241 = -0.4*t1866*t1541;
  t2242 = t1532*t1687;
  t2243 = t1866*t1541;
  t2244 = t2242 + t2243;
  t2245 = 0.8*t2244;
  t2246 = t2240 + t2241 + t2245;
  t2247 = -1.*var4[0]*t2246;
  t2157 = 3.2*t1703*t1942;
  t2159 = 3.2*t1721*t1949;
  t2160 = t2137 + t2156 + t2157 + t2158 + t2159;
  t1943 = 3.2*t1565*t1942;
  t1950 = 3.2*t1602*t1949;
  t1951 = t1903 + t1934 + t1943 + t1944 + t1950;
  t2170 = 3.2*t1703*t1974;
  t2171 = 3.2*t1721*t1978;
  t2172 = t2156 + t2170 + t2158 + t2171;
  t1975 = 3.2*t1565*t1974;
  t1979 = 3.2*t1602*t1978;
  t1980 = t1934 + t1975 + t1944 + t1979;
  t2186 = 3.2*t1740*t2014;
  t2188 = 3.2*t1743*t2021;
  t2189 = t2140 + t2185 + t2186 + t2187 + t2188;
  t2015 = 3.2*t1669*t2014;
  t2022 = 3.2*t1681*t2021;
  t2023 = t1906 + t2006 + t2015 + t2016 + t2022;
  t2199 = 3.2*t1740*t2046;
  t2200 = 3.2*t1743*t2050;
  t2201 = t2185 + t2199 + t2187 + t2200;
  t2047 = 3.2*t1669*t2046;
  t2051 = 3.2*t1681*t2050;
  t2052 = t2006 + t2047 + t2016 + t2051;
  t2073 = 2.88*t1421;
  t2074 = 6.8*t1524*t1751;
  t2075 = 3.2*t1602*t1768;
  t2076 = 3.2*t1565*t1772;
  t2077 = 6.8*t1625*t1778;
  t2078 = 3.2*t1681*t1795;
  t2079 = 3.2*t1669*t1799;
  t2080 = t2073 + t2074 + t2075 + t2076 + t2077 + t2078 + t2079;
  t2207 = Power(t1751,2);
  t2209 = Power(t1768,2);
  t2211 = Power(t1772,2);
  t2213 = Power(t1778,2);
  t2215 = Power(t1795,2);
  t2217 = Power(t1799,2);
  t2265 = 0.4*t1687*t1541;
  t1814 = -0.748*t1524;
  t1819 = -3.2*t1818*t1565;
  t1823 = -3.2*t1822*t1602;
  t1824 = t1814 + t1819 + t1823;
  t2111 = -0.748*t1687;
  t2112 = -3.2*t1822*t1721;
  t2113 = -3.2*t1818*t1703;
  t2114 = t2111 + t2112 + t2113;
  t2226 = -0.748*t1751;
  t2227 = -3.2*t1822*t1768;
  t2228 = -3.2*t1818*t1772;
  t2229 = -0.67 + t2226 + t2227 + t2228;
  t2118 = 3.2*t1818*t1870;
  t2119 = 3.2*t1822*t1877;
  t2120 = t2117 + t2118 + t2119;
  t2149 = t2117 + t2147 + t2148;
  t1920 = t1831 + t1918 + t1919;
  t2252 = 3.2*t1818*t1942;
  t2253 = 3.2*t1822*t1949;
  t2254 = t2252 + t2253;
  t2264 = -0.4*t1532*t1866;
  t2266 = -1.*t1687*t1541;
  t2267 = t2234 + t2266;
  t2268 = 0.8*t2267;
  t2269 = t2264 + t2265 + t2268;
  t2270 = -1.*var4[2]*t2269;
  t2271 = -0.4*t1532*t1687;
  t2272 = 0.4*t1524*t1541;
  t2273 = -1.*t1524*t1541;
  t2274 = t2242 + t2273;
  t2275 = 0.8*t2274;
  t2276 = t2271 + t2272 + t2275;
  t2277 = -1.*var4[0]*t2276;
  t2163 = 3.2*t1960*t1721;
  t2164 = 3.2*t1956*t1703;
  t2165 = t2163 + t2147 + t2164 + t2148;
  t1957 = 3.2*t1956*t1565;
  t1961 = 3.2*t1960*t1602;
  t1962 = t1918 + t1957 + t1961 + t1919;
  t2278 = 3.2*t1960*t1768;
  t2279 = 3.2*t1956*t1772;
  t2280 = 3.2*t1818*t1974;
  t2281 = 3.2*t1822*t1978;
  t2282 = t2278 + t2279 + t2280 + t2281;
  t2081 = 0.748*t1524;
  t2082 = 3.2*t1818*t1565;
  t2083 = 3.2*t1822*t1602;
  t2084 = t2081 + t2082 + t2083;
  t2324 = 0.748*t1751;
  t2325 = 3.2*t1822*t1768;
  t2326 = 3.2*t1818*t1772;
  t2327 = 0.67 + t2324 + t2325 + t2326;
  t2346 = Power(t1822,2);
  t2348 = Power(t1818,2);
  t2336 = -0.4*t1756*t1524;
  t2337 = t1532*t1524;
  t2338 = t1687*t1541;
  t2339 = t2337 + t2338;
  t2340 = -0.8*t2339;
  t2341 = t2336 + t2265 + t2340;
  t2342 = -0.4*t1756*t1687;
  t2343 = 0.4*t1866*t1541;
  t2344 = -0.8*t2244;
  t2345 = t2342 + t2343 + t2344;
  t1825 = -0.768*t1565;
  t2115 = -0.768*t1703;
  t2230 = -0.768*t1772;
  t2231 = -0.2 + t2230;
  t2351 = -0.768*t1818;
  t2352 = -0.2 + t2351;
  t2378 = 0.768*t1859*t1929;
  t2379 = 0.768*t1847*t1916;
  t2085 = 0.768*t1565;
  t2205 = 0.768*t1703;
  t2328 = 0.768*t1772;
  t2329 = 0.2 + t2328;
  t2372 = 0.768*t1818;
  t2373 = 0.2 + t2372;
  t2383 = 0.4*t1532*t1524;
  t1802 = -0.748*t1625;
  t1807 = -3.2*t1806*t1669;
  t1811 = -3.2*t1810*t1681;
  t1812 = t1802 + t1807 + t1811;
  t2106 = -0.748*t1735;
  t2107 = -3.2*t1810*t1743;
  t2108 = -3.2*t1806*t1740;
  t2109 = t2106 + t2107 + t2108;
  t2220 = -0.748*t1778;
  t2221 = -3.2*t1810*t1795;
  t2222 = -3.2*t1806*t1799;
  t2223 = -0.67 + t2220 + t2221 + t2222;
  t2124 = 3.2*t1806*t1889;
  t2125 = 3.2*t1810*t1896;
  t2126 = t2123 + t2124 + t2125;
  t2178 = t2123 + t2176 + t2177;
  t1991 = t1841 + t1989 + t1990;
  t2292 = 3.2*t1806*t2014;
  t2293 = 3.2*t1810*t2021;
  t2294 = t2292 + t2293;
  t2192 = 3.2*t2032*t1743;
  t2193 = 3.2*t2028*t1740;
  t2194 = t2192 + t2176 + t2193 + t2177;
  t2029 = 3.2*t2028*t1669;
  t2033 = 3.2*t2032*t1681;
  t2034 = t1989 + t2029 + t2033 + t1990;
  t2304 = 3.2*t2032*t1795;
  t2305 = 3.2*t2028*t1799;
  t2306 = 3.2*t1806*t2046;
  t2307 = 3.2*t1810*t2050;
  t2308 = t2304 + t2305 + t2306 + t2307;
  t2086 = 0.748*t1625;
  t2087 = 3.2*t1806*t1669;
  t2088 = 3.2*t1810*t1681;
  t2089 = t2086 + t2087 + t2088;
  t2330 = 0.748*t1778;
  t2331 = 3.2*t1810*t1795;
  t2332 = 3.2*t1806*t1799;
  t2333 = 0.67 + t2330 + t2331 + t2332;
  t2404 = Power(t1810,2);
  t2406 = Power(t1806,2);
  t1813 = -0.768*t1669;
  t2110 = -0.768*t1740;
  t2224 = -0.768*t1799;
  t2225 = -0.2 + t2224;
  t2409 = -0.768*t1806;
  t2410 = -0.2 + t2409;
  t2436 = 0.768*t1859*t2001;
  t2437 = 0.768*t1847*t1987;
  t2090 = 0.768*t1669;
  t2206 = 0.768*t1740;
  t2334 = 0.768*t1799;
  t2335 = 0.2 + t2334;
  t2430 = 0.768*t1806;
  t2431 = 0.2 + t2430;
  p_output1[0]=t1478 + t1486 - 6.8*t1506 + t1529 - 3.2*t1568 - 3.2*t1603 - 6.8*t1612 + t1635 - 3.2*t1674 - 3.2*t1682;
  p_output1[1]=t1745;
  p_output1[2]=t1801;
  p_output1[3]=t1812;
  p_output1[4]=t1813;
  p_output1[5]=t1824;
  p_output1[6]=t1825;
  p_output1[7]=0.768*t1703*t1827 + t1830*t1834 + 0.768*t1740*t1837 + t1840*t1844 + t1847*(6.4*t1565*t1703 + 6.4*t1602*t1721 + 6.4*t1669*t1740 + 6.4*t1681*t1743 + t1848 + t1849 + t1852 + t1853) + t1859*t1898 + t1901*t1909;
  p_output1[8]=t1917 + t1830*t1920 + t1847*(t1848 + t1849 + t1922 + t1923) + t1859*t1932 + t1901*t1951;
  p_output1[9]=t1917 + t1847*(t1922 + t1923) + t1830*t1962 + t1859*t1966 + t1901*t1980;
  p_output1[10]=t1988 + t1840*t1991 + t1847*(t1852 + t1853 + t1993 + t1994) + t1859*t2004 + t1901*t2023;
  p_output1[11]=t1988 + t1847*(t1993 + t1994) + t1840*t2034 + t1859*t2038 + t1901*t2052;
  p_output1[12]=6.8*t1506 + 3.2*t1568 + 3.2*t1603 + 6.8*t1612 + 3.2*t1674 + 3.2*t1682 + t1863 + t1882 + t2055 + t2056;
  p_output1[13]=t2072;
  p_output1[14]=t2080;
  p_output1[15]=t2084;
  p_output1[16]=t2085;
  p_output1[17]=t2089;
  p_output1[18]=t2090;
  p_output1[19]=-1.;
  p_output1[20]=t1745;
  p_output1[21]=t1478 + t1486 + t1529 + t1635 - 6.8*t1860 - 3.2*t1872 - 3.2*t1874 - 6.8*t1879 - 3.2*t1891 - 3.2*t1893;
  p_output1[22]=t2105;
  p_output1[23]=t2109;
  p_output1[24]=t2110;
  p_output1[25]=t2114;
  p_output1[26]=t2115;
  p_output1[27]=0.768*t1827*t1870 + 0.768*t1837*t1889 + t1847*t1898 + t1830*t2120 + t1840*t2126 + t1859*(t1848 + t1852 + 6.4*t1703*t1870 + 6.4*t1721*t1877 + 6.4*t1740*t1889 + 6.4*t1743*t1896 + t2128 + t2131) + t1901*t2143;
  p_output1[28]=t1847*t1932 + t2146 + t1830*t2149 + t1859*(t1848 + t2128 + t2151 + t2152) + t1901*t2160;
  p_output1[29]=t1847*t1966 + t2146 + t1859*(t2151 + t2152) + t1830*t2165 + t1901*t2172;
  p_output1[30]=t1847*t2004 + t2175 + t1840*t2178 + t1859*(t1852 + t2131 + t2180 + t2181) + t1901*t2189;
  p_output1[31]=t1847*t2038 + t2175 + t1859*(t2180 + t2181) + t1840*t2194 + t1901*t2201;
  p_output1[32]=t2072;
  p_output1[33]=t1861 + t1863 + t1873 + t1875 + t1880 + t1882 + t1892 + t1894 + t2055 + t2056;
  p_output1[34]=t1909;
  p_output1[35]=t1834;
  p_output1[36]=t2205;
  p_output1[37]=t1844;
  p_output1[38]=t2206;
  p_output1[39]=-1.;
  p_output1[40]=t1801;
  p_output1[41]=t2105;
  p_output1[42]=-3.3612 - 6.8*t2207 - 3.2*t2209 - 3.2*t2211 - 6.8*t2213 - 3.2*t2215 - 3.2*t2217;
  p_output1[43]=t2223;
  p_output1[44]=t2225;
  p_output1[45]=t2229;
  p_output1[46]=t2231;
  p_output1[47]=t1847*t1909 + t1859*t2143 + t2239 + t2247;
  p_output1[48]=0.768*t1827*t1942 + t1901*(6.4*t1772*t1942 + 6.4*t1768*t1949) + t1847*t1951 + t1859*t2160 + t2239 + t2247 + t1830*t2254;
  p_output1[49]=0.768*t1827*t1974 + t1901*(6.4*t1772*t1974 + 6.4*t1768*t1978) + t1847*t1980 + t1859*t2172 + t2270 + t2277 + t1830*t2282;
  p_output1[50]=0.768*t1837*t2014 + t1901*(6.4*t1799*t2014 + 6.4*t1795*t2021) + t1847*t2023 + t1859*t2189 + t1840*t2294;
  p_output1[51]=0.768*t1837*t2046 + t1901*(6.4*t1799*t2046 + 6.4*t1795*t2050) + t1847*t2052 + t1859*t2201 + t1840*t2308;
  p_output1[52]=t2080;
  p_output1[53]=t1909;
  p_output1[54]=3.3612 + 6.8*t2207 + 3.2*t2209 + 3.2*t2211 + 6.8*t2213 + 3.2*t2215 + 3.2*t2217;
  p_output1[55]=t2327;
  p_output1[56]=t2329;
  p_output1[57]=t2333;
  p_output1[58]=t2335;
  p_output1[59]=t2341;
  p_output1[60]=t2345;
  p_output1[61]=t1824;
  p_output1[62]=t2114;
  p_output1[63]=t2229;
  p_output1[64]=-1.58228 - 3.2*t2346 - 3.2*t2348;
  p_output1[65]=t2352;
  p_output1[66]=t1834*t1847 + t1859*t2120 + t2239 + t2247;
  p_output1[67]=t1847*t1920 + t1859*t2149 + t2239 + t2247 + t1901*t2254;
  p_output1[68]=0.768*t1827*t1956 + t1830*(6.4*t1818*t1956 + 6.4*t1822*t1960) + t1847*t1962 + t1859*t2165 + t2270 + t2277 + t1901*t2282;
  p_output1[69]=t2084;
  p_output1[70]=t1834;
  p_output1[71]=t2327;
  p_output1[72]=1.58228 + 3.2*t2346 + 3.2*t2348;
  p_output1[73]=t2373;
  p_output1[74]=t2341;
  p_output1[75]=t2345;
  p_output1[76]=t1825;
  p_output1[77]=t2115;
  p_output1[78]=t2231;
  p_output1[79]=t2352;
  p_output1[80]=-1.2143199999999998;
  p_output1[81]=0.768*t1703*t1847 + 0.768*t1859*t1870 + t2270 + t2277;
  p_output1[82]=0.768*t1901*t1942 + t2270 + t2277 + t2378 + t2379;
  p_output1[83]=0.768*t1830*t1956 + 0.768*t1901*t1974 + t2378 + t2379 - 1.*(0.4*t1504*t1532 + t2272 + 0.8*(-1.*t1504*t1532 + t2273))*var4[0] - 1.*(t2265 + 0.8*(-1.*t1524*t1532 + t2266) + t2383)*var4[2];
  p_output1[84]=t2085;
  p_output1[85]=t2205;
  p_output1[86]=t2329;
  p_output1[87]=t2373;
  p_output1[88]=1.2143199999999998;
  p_output1[89]=t2233 - 0.8*(-1.*t1504*t1541 + t2337) + t2383;
  p_output1[90]=-0.4*t1524*t1541 + 0.4*t1532*t1687 - 0.8*t2274;
  p_output1[91]=t1812;
  p_output1[92]=t2109;
  p_output1[93]=t2223;
  p_output1[94]=-1.58228 - 3.2*t2404 - 3.2*t2406;
  p_output1[95]=t2410;
  p_output1[96]=t1844*t1847 + t1859*t2126;
  p_output1[97]=t1847*t1991 + t1859*t2178 + t1901*t2294;
  p_output1[98]=0.768*t1837*t2028 + t1840*(6.4*t1806*t2028 + 6.4*t1810*t2032) + t1847*t2034 + t1859*t2194 + t1901*t2308;
  p_output1[99]=t2089;
  p_output1[100]=t1844;
  p_output1[101]=t2333;
  p_output1[102]=1.58228 + 3.2*t2404 + 3.2*t2406;
  p_output1[103]=t2431;
  p_output1[104]=t1813;
  p_output1[105]=t2110;
  p_output1[106]=t2225;
  p_output1[107]=t2410;
  p_output1[108]=-1.2143199999999998;
  p_output1[109]=0.768*t1740*t1847 + 0.768*t1859*t1889;
  p_output1[110]=0.768*t1901*t2014 + t2436 + t2437;
  p_output1[111]=0.768*t1840*t2028 + 0.768*t1901*t2046 + t2436 + t2437;
  p_output1[112]=t2090;
  p_output1[113]=t2206;
  p_output1[114]=t2335;
  p_output1[115]=t2431;
  p_output1[116]=1.2143199999999998;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 7 && ncols == 1) && 
      !(mrows == 1 && ncols == 7))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 7 && ncols == 1) && 
      !(mrows == 1 && ncols == 7))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 7 && ncols == 1) && 
      !(mrows == 1 && ncols == 7))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 117, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "J_dxDiscreteMapRightImpact.hh"

namespace RightImpact
{

void J_dxDiscreteMapRightImpact_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
